#!/bin/bash
# Test extraction and re-creation of LLB files
# You need a group of llb files to execute this test on.
# To verify changes in pylabview code, directory 'vi.lib'
# from LV installation can be used.
set -x
#set -e

#rm -rf ./lv025 ./lv040 ./lv060 ./lv071 ./lv086 ./lv100 ./lv140
#sleep 1
#7za x -o./lv040 ./lv040-lib.7z
#7za x -o./lv060 ./lv060-vi.lib.7z
#7za x -o./lv086 ./lv086-vi.lib.7z
#7za x -o./lv140 ./lv140-vi.lib.7z
if [ $# -eq 0 ]; then
    echo "No custom folders supplied - using default list"
    SRC_LLB_DIRS="../lv025 ../lv040 ../lv060 ../lv071 ../lv100 ../lv140"
else
    echo "Custom folders set from parameter list"
    SRC_LLB_DIRS="$@"
fi


mkdir -p ../test_out
cd ../test_out

echo | tee log-vi_lib-llb-1extr.txt
echo | tee log-vi_lib-llb-2creat.txt
echo | tee log-vi_lib-llb-3reext.txt
echo | tee log-vi_lib-llb-4cmp.txt

# LLB files generated by the tool are NOT the same as original on binary level. That's because names section generation has time dependencies.
# So instead of comparing LLBs, compare the extracted files from first extraction and second extraction.
find ${SRC_LLB_DIRS} -type f -iname '*.llb' | tee log-vi_lib-llb-0list.txt

while IFS= read -r rsrc_fn; do
    rsrc_out_fn=$(basename "${rsrc_fn}")
    rsrc_base_fn=${rsrc_out_fn%.*}
    single_vi_path=${rsrc_fn%/*} # path without file name
    single_vi_path=${single_vi_path#*/}  # remove first folder
    mkdir -p "${single_vi_path}"
    xml_fn="${rsrc_base_fn}.xml"
    log_fn="${single_vi_path}/${rsrc_base_fn}.log"
    (../readRSRC.py -vv -x --keep-names -i "${rsrc_fn}" -m "${single_vi_path}/${xml_fn}") 2>&1 | tee "${log_fn}"
    cat "${log_fn}" | tee -a log-vi_lib-llb-1extr.txt

    (../readRSRC.py -vv -c -m "${single_vi_path}/${xml_fn}" -i "${rsrc_out_fn}") 2>&1 | tee -a log-vi_lib-llb-2creat.txt

    # Re-extract - we can only compare extracted files
    (../readRSRC.py -vv -x --keep-names -i "${rsrc_out_fn}" -m "${xml_fn}") 2>&1 | tee -a log-vi_lib-llb-3reext.txt
    # Note that some file names within LV LLBs contain characters like: ,'+=!
    sed -n 's/^.\+: Storing block b'\''.\+'\'' .* in '\''\(.\+[.][a-z]\{1,5\}\)'\''.*$/\1/p' "${log_fn}" | sort -u | tee "${rsrc_base_fn}.lst"

    echo "Comparing blocks of \"${rsrc_fn}\"" | tee -a log-vi_lib-llb-4cmp.txt
    while IFS= read -r block_fn; do
        block_out_fn=$(basename "${block_fn}")
        (cmp -l "${block_fn}" "${block_out_fn}") 2>&1 | tee -a log-vi_lib-llb-4cmp.txt
        rm "${block_out_fn}"
    done < "${rsrc_base_fn}.lst"
    rm "${rsrc_base_fn}.lst" "${xml_fn}" "${rsrc_out_fn}"
done < log-vi_lib-llb-0list.txt

cd ../tests

exit 0
